body{
    font: normal 16px/1.5 'Roboto', sans-serif;
    background: #f1f1f1;
    padding: 130px 0 0 0;
}

/*RESET STYLES
-----------------------------------------------------
*/

.chart-skills{
    list-style-type: none;
    padding: 0;
    margin: 0 auto;
}

.chart-skills *,
.chart-skills::before{
    box-sizing: border-box;
}

/*CHART-SKILLS STYLE
-----------------------------------------------------
*/

.chart-skills{
    position: relative;
    width: 350px;
    height: 175px;
}

.chart-skills::before,
.chart-skills::after{
    position: absolute;
}


.chart-skills::before{
    content:'';
    width: inherit;             /*inherits from its parent element*/
    height: inherit;
    border: 45px solid rgba(211,211,211,.3);
    border-bottom: none;
    border-top-left-radius: 175px;
    border-top-right-radius: 175px;
}

.chart-skills::after{

    content: 'Top Skills';
    left: 50%;
    bottom: 10px;
    transform: translateX(-50%);
    font-size: 1.1rem;
    font-weight: bold;
    color: cadetblue;

}

/*
CHART SKILLS LIST
-----------------------------------------
Position them right underneath their parent and,
give them appropriate styles so as to create a reverse half circle.

The list items are absolutely positioned, thus weâ€™re able to set their z-index property.

I set transform-origin: 50% 0. In this way, when we animate (rotate) the items,
their center top corner will become the center of rotation.
*/

.chart-skills li{
    position: absolute;
    top: 100%;
    left: 0;
    width: inherit;
    height: inherit;
    border: 45px solid;
    border-top: none;
    border-bottom-left-radius: 175px;
    border-bottom-right-radius: 175px;
    transform-origin: 50% 0;

}

.chart-skills li:nth-child(1){
    z-index: 4;
    border-color: green;
    animation-name: rotate-one;

}

.chart-skills li:nth-child(2){
    z-index: 3;
    border-color: firebrick;
    animation-name: rotate-two;
    animation-delay: .4s;
}

.chart-skills li:nth-child(3){
    z-index: 2;
    border-color: steelblue;
    animation-name: rotate-three;
    animation-delay: .8s;
}

.chart-skills li:nth-child(4){
    z-index: 1;
    border-color: orange;
    animation-name: rotate-four;
    animation-delay: 1.2s;
}

/*ANIMATION
--------------------------------------------------
Desired percentage, calculate how many degrees we have to animate,
multiply with 180 degrees because I use a semi-circle

CSS -  30   = 30/100 * 180 = 54 deg
HTML - 40   = 40/100 * 180 = 72 deg
JS -   20   = 20/100 * 180 = 36
JAVA - 10   = 10/100 * 180 = 18

*/

/* Define some animation styles that are shared across all items
---------------------------
*/

.chart-skills li{
    animation-fill-mode: forwards;
    animation-duration: .4s;
    animation-timing-function: linear;
}

/* Unique animation styles
    All items have delay except first.
    With it I created nice sequential animation.
    When first element finishes, the second appears and so on.
---------------
*/


/* Specify the actual animations:
------------------------------------
*/

@keyframes rotate-one {
    100%{
        transform: rotate(54deg);
    }
}

@keyframes rotate-two {
    0%{
        transform: rotate(54deg);
    }
    100%{
        transform: rotate(126deg);
        /*
        54 + 72 = 126
        */
    }
}

@keyframes rotate-three{
    0%{
        transform: rotate(126deg);
    }
    100%{
        transform: rotate(162deg);
    }
}

@keyframes rotate-four{
    0%{
        transform: rotate(162deg);
    }
    100%{
        transform:rotate(180deg);
    }
}

/* HIDE the bottom half of the chart!!
____________________________________
*/

.chart-skills{
    overflow: hidden;

}
/*
 This two properties prevent FLICKERING EFFECTS !!!!!
 that may occur in different browsers due to animations.
*/
.chart-skills li{
    -webkit-transform-style: preserve-3d;
    transform-style: preserve-3d;

    -webkit-backface-visibility: hidden;
    -moz-backface-visibility: hidden;
    backface-visibility: hidden;
}


/* Adding Styles to the Labels
----------------------------------------------------
    * negative values to rotate them
    * these are extracted from the last frame of their parent item.
*/

.chart-skills span{
    position: absolute;
    font-size: .85rem;

    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    -webkit-animation: fade-in .4s linear forwards;
    animation: fade-in .4s linear forwards;
}

@keyframes fade-in {
    0%,
    90%{
        opacity: 0;
    }
    100%{
        opacity: 1;
    }
}

@-webkit-keyframes fade-in {
    0%,
    90%{
        opacity: 0;
    }
    100%{
        opacity: 1;
    }
}

.chart-skills li:nth-child(1) span{
    top: 5px;
    left: 20px;
    transform: rotate(-54deg);
}

.chart-skills li:nth-child(2) span{
    top: 20px;
    left: 20px;
    transform: rotate(-126deg);

    -moz-animation-delay: .4s;
    -webkit-animation-delay: .4s;
    animation-delay: .4s;
}

.chart-skills li:nth-child(3) span{
    top: 18px;
    left: 20px;
    transform: rotate(-162deg);

    -moz-animation-delay: .8s;
    -webkit-animation-delay: .8s;
    animation-delay: .8s;
}

.chart-skills li:nth-child(4) span{
    top: 10px;
    left: 20px;
    transform: rotate(-180deg);

    -moz-animation-delay: 1.2s;
    -webkit-animation-delay: 1.2s;
    animation-delay: 1.2s;

}











